:inputText
    if $ModoDeCompilacion == f_PC
    then Txd.DrawRect(320.0,390.0,430.0,100.0,0x6a,0x1b,0x9a,0x77)
    else Txd.DrawRect(320.0,320.0,430.0,150.0,0x6a,0x1b,0x9a,0x77)
    end
    Text.UseCommands(true)

    int 22@ = 0 // cut string
    int 23@ = 0 // position at string
    int 24@ = 0 // lenght
    goto @rCallDislayString
        :String_getCharAt
            if $ModoDeCompilacion == f_PC
            then 0AC6: 0@ = label_addr @valueString
            else 0DD0: 0@ = label_addr @valueString
            end
            0@ += 5 // skip 4 bytes : [2-opcode, 1-dataType, 1-start]
            //1@ += 3 // charAt()

            0@ += 1@

            if $ModoDeCompilacion == f_PC
            then 1@ = Memory.Read(0@, 1, false)
            else 0DD8: 1@ = read_mem_addr 0@ size 1 add_ib 0
            end
        return
        :String_setCharAt
            // 0@ = INT: position
            // 2@ = INT: value
            if $ModoDeCompilacion == f_PC
            then 0AC6: 0@ = label_addr @valueString
            else 0DD0: 0@ = label_addr @valueString
            end
            0@ += 5 // skip 4 bytes : [2-opcode, 1-dataType, 1-start]
            //1@ += 3 // charAt()

            0@ += 1@

            if $ModoDeCompilacion == f_PC
            then Memory.Write(0@, 1, 2@, false)
            else 0DD9: write_mem_addr 0@ value 2@ size 1 add_ib 0 protect 0
            end
        return
        :String_GetLenght
            2@ = 0 // count
            while true
                1@ = 2@
                String_getCharAt()
                if 1@ == 0x00
                then break
                else 2@ += 1
                end
            end
        return
        :callDislayString
            {21@ = chatset}
            20@ += 18 // [2-opcode, 5 float, 5 float, 6 string]
            if $ModoDeCompilacion == f_PC
            then Memory.Write(20@, 1, 0x57, false) // GXT.at(6) = W
            else 0DD9: write_mem_addr 20@ value 0x57 size 1 add_ib 0 protect 0
            end
            20@ += 1
            if $ModoDeCompilacion == f_PC
            then Memory.Write(20@, 1, 0x5A, false) // GXT.at(7) = Z
            else 0DD9: write_mem_addr 20@ value 0x5A size 1 add_ib 0 protect 0
            end
            int 0@,1@, 21@
            1@ = 21@
            String_getCharAt() // 1@ - return charAt
            if not 1@ == 0x00
            then
                20@ -= 1
                if $ModoDeCompilacion == f_PC
                then Memory.Write(20@, 1, 0x58, false) // GXT.at(6) = X
                else 0DD9: write_mem_addr 20@ value 0x58 size 1 add_ib 0 protect 0
                end
                // set value
                20@ += 1
                if $ModoDeCompilacion == f_PC
                then Memory.Write(20@, 1, 1@, false) // GXT.at(7) = 1@
                else 0DD9: write_mem_addr 20@ value 1@ size 1 add_ib 0 protect 0
                end
                23@ = 21@
            end
        return

        :valueString
            SpecialActor.Load('ANDRE\x00\x00',1)
            18@ = true
        return
    :rCallDislayString

    // BEGIN: SHOW VALUES
        Text.SetScale(1.0, 2.0)
        :at0
        // RESET VALUES >>>
        Text.Display(280.0, 250.0, 'M0000WZ')
        if $ModoDeCompilacion == f_PC
        then 0AC6: 20@ = label_addr @at0
        else 0DD0: 20@ = label_addr @at0
        end
        21@ = 0
        callDislayString()

        Text.SetScale(1.0, 2.0)
        :at1
        Text.Display(300.0, 250.0, 'M0000WZ')
        if $ModoDeCompilacion == f_PC
        then 0AC6: 20@ = label_addr @at1
        else 0DD0: 20@ = label_addr @at1
        end
        21@ = 1
        callDislayString()

        Text.SetScale(1.0, 2.0)
        :at2
        Text.Display(320.0, 250.0, 'M0000WZ')
        if $ModoDeCompilacion == f_PC
        then 0AC6: 20@ = label_addr @at2
        else 0DD0: 20@ = label_addr @at2
        end
        21@ = 2
        callDislayString()

        Text.SetScale(1.0, 2.0)
        :at3
        Text.Display(340.0, 250.0, 'M0000WZ')
        if $ModoDeCompilacion == f_PC
        then 0AC6: 20@ = label_addr @at3
        else 0DD0: 20@ = label_addr @at3
        end
        21@ = 3
        callDislayString()

        Text.SetScale(1.0, 2.0)
        :at4
        Text.Display(360.0, 250.0, 'M0000WZ')
        if $ModoDeCompilacion == f_PC
        then 0AC6: 20@ = label_addr @at4
        else 0DD0: 20@ = label_addr @at4
        end
        21@ = 4
        callDislayString()

        Text.SetScale(1.0, 2.0)
        :at5
        Text.Display(380.0, 250.0, 'M0000WZ')
        if $ModoDeCompilacion == f_PC
        then 0AC6: 20@ = label_addr @at5
        else 0DD0: 20@ = label_addr @at5
        end
        21@ = 5
        callDislayString()

        Text.SetScale(1.0, 2.0)
        :at6
        Text.Display(400.0, 250.0, 'M0000WZ')
        if $ModoDeCompilacion == f_PC
        then 0AC6: 20@ = label_addr @at6
        else 0DD0: 20@ = label_addr @at6
        end
        21@ = 6
        callDislayString()

        24@ = 23@
        24@ += 1

        1@ = 0
        String_getCharAt() // 1@ - return charAt
        if 1@ == 0x00
        then 24@ = 0
        else 24@ = 1
        end
    // END: SHOW VALUES

    // BEGIN: WRITE VALUE
        // Solo podemos escribir hasta 7 caracteres, por lo que es importante
        // que llevemos un controle de cuantas casillas nos quedan.
        if 23@ < 7
        then
            if $ModoDeCompilacion == f_PC
            then
                // Para no escribir 36 funciones que se encargen de registrar
                // cada pulsacion del teclado. hacemos un bucle que inicio
                // inicie por la tecla [0] y acabe en la [Z].
                // > Estas casualmente llevan las mismas IDs que en ASCII
                // > por lo que nos ahorramos algunas operaciones.
                2@ = 0x30 // [0]
                while 2@ <= 0x5A // [Z]
                    if Key.IsPressed(2@)
                    then
                        if 24@ == 0
                        then 23@ = -1
                        end
                        23@ += 1
                        1@ = 23@
                        String_setCharAt() // 1@ - return charAt
                        while Key.IsPressed(2@)
                            wait0()
                        end
                    end
                    2@ += 1
                end
            else
                // # f_Android
                
                // Sacamos el rango que hay entre 180 y 400 y lo dividimos en 10
                // casillas, que son las teclas de la 1er fila del teclado:
                // > [1][2][3][4][5][6][7][8][9][0]
                
                // Entonces hacemos esta cuenta para tener la data necesaria:
                // 400 - 180 = 220
                // 220 / 10 = 22

                int 14@, 15@
                // para saber en que tecla estamos
                get_mutex_var 14@ = IMPORT_TOUCH_X2 // INT: lelf/right
                
                // para saber en que fila estamos
                get_mutex_var 15@ = IMPORT_TOUCH_Y2 // INT: top/down

                if and
                    15@ >= 320
                    15@ <= 357 // 470 max
                then
                    int 13@ = 1 // fila
                end
                if and
                    15@ >= 357
                    15@ <= 394 // 470 max
                then
                    int 13@ = 2 // fila
                end
                if and
                    15@ >= 394
                    15@ <= 431 // 470 max
                then
                    int 13@ = 3 // fila
                end
                if and
                    15@ >= 431
                    15@ <= 468 // 470 max
                then
                    int 13@ = 4 // fila
                end


                if 13@ == 1 // [1-0]
                then
                    int 10@ = 180 // valor inicial
                    int 11@ = 202// siguiente valor
                    int 12@ = 1 // tecla

                    while 12@ <= 10

                        // Estamos en la primer fila.
                        // en la de los numeros del 1-9
                        if 14@ == -1
                        then
                            break
                        else
                            if and
                                14@ >= 10@
                                14@ <= 11@
                            then
                                2@ = 0x30 // [0]
                                if not 12@ == 10
                                then 2@ += 12@
                                end

                                if 24@ == 0
                                then 23@ = -1
                                end
                                23@ += 1
                                1@ = 23@
                                String_setCharAt() // 1@ - return charAt

                                while not 14@ == -1
                                    get_mutex_var 14@ = IMPORT_TOUCH_X2 // INT: lelf/right
                                    Wait0()
                                end
                            end
                        end

                        10@ += 22
                        11@ += 22
                        12@ += 1
                    end
                end

                if 13@ == 2 // [Q-P] <190-400=210/10=21>
                then
                    int 10@ = 190 // valor inicial
                    int 11@ = 211 // siguiente valor
                    int 12@ = 1 // tecla

                    while 12@ <= 11

                        // Estamos en la primer fila.
                        // en la de los numeros del 1-9
                        if 14@ == -1
                        then
                            break
                        else
                            if and
                                14@ >= 10@
                                14@ <= 11@
                            then
                                if 12@ == 1
                                then 2@ = 0x51 // [Q]
                                end
                                if 12@ == 2
                                then 2@ = 0x57 // [W]
                                end
                                if 12@ == 3
                                then 2@ = 0x45 // [E]
                                end
                                if 12@ == 4
                                then 2@ = 0x52 // [R]
                                end
                                if 12@ == 5
                                then 2@ = 0x54 // [T]
                                end
                                if 12@ == 6
                                then 2@ = 0x59 // [Y]
                                end
                                if 12@ == 7
                                then 2@ = 0x55 // [U]
                                end
                                if 12@ == 8
                                then 2@ = 0x49 // [I]
                                end
                                if 12@ == 9
                                then 2@ = 0x4F // [O]
                                end
                                if 12@ == 10
                                then 2@ = 0x50 // [P]
                                end
                                if 12@ == 11
                                then 2@ = 0x40 // [@]
                                end

                                if 24@ == 0
                                then 23@ = -1
                                end
                                23@ += 1
                                1@ = 23@
                                String_setCharAt() // 1@ - return charAt

                                while not 14@ == -1
                                    get_mutex_var 14@ = IMPORT_TOUCH_X2 // INT: lelf/right
                                    Wait0()
                                end
                            end
                        end

                        10@ += 21
                        11@ += 21
                        12@ += 1
                    end
                end

                if 13@ == 3 // [A-L] <200-380=180/9=20>
                then
                    int 10@ = 200 // valor inicial
                    int 11@ = 220 // siguiente valor
                    int 12@ = 1 // tecla

                    while 12@ <= 9

                        // Estamos en la primer fila.
                        // en la de los numeros del 1-9
                        if 14@ == -1
                        then
                            break
                        else
                            if and
                                14@ >= 10@
                                14@ <= 11@
                            then
                                if 12@ == 1
                                then 2@ = 0x41 // [A]
                                end
                                if 12@ == 2
                                then 2@ = 0x53 // [S]
                                end
                                if 12@ == 3
                                then 2@ = 0x44 // [D]
                                end
                                if 12@ == 4
                                then 2@ = 0x46 // [F]
                                end
                                if 12@ == 5
                                then 2@ = 0x47 // [G]
                                end
                                if 12@ == 6
                                then 2@ = 0x48 // [H]
                                end
                                if 12@ == 7
                                then 2@ = 0x4A // [J]
                                end
                                if 12@ == 8
                                then 2@ = 0x4B // [K]
                                end
                                if 12@ == 9
                                then 2@ = 0x4C // [L]
                                end

                                if 24@ == 0
                                then 23@ = -1
                                end
                                23@ += 1
                                1@ = 23@
                                String_setCharAt() // 1@ - return charAt

                                while not 14@ == -1
                                    get_mutex_var 14@ = IMPORT_TOUCH_X2 // INT: lelf/right
                                    Wait0()
                                end
                            end
                        end

                        10@ += 21
                        11@ += 21
                        12@ += 1
                    end
                end

                if 13@ == 4 // [Z-M] <250-397=147/7=21>
                then
                    int 10@ = 220 // valor inicial
                    int 11@ = 241 // siguiente valor
                    int 12@ = 1 // tecla

                    while 12@ <= 8

                        // Estamos en la primer fila.
                        // en la de los numeros del 1-9
                        if 14@ == -1
                        then
                            break
                        else
                            if and
                                14@ >= 10@
                                14@ <= 11@
                            then
                                if 12@ == 1
                                then 2@ = 0x5A // [Z]
                                end
                                if 12@ == 2
                                then 2@ = 0x58 // [X]
                                end
                                if 12@ == 3
                                then 2@ = 0x43 // [C]
                                end
                                if 12@ == 4
                                then 2@ = 0x56 // [V]
                                end
                                if 12@ == 5
                                then 2@ = 0x42 // [B]
                                end
                                if 12@ == 6
                                then 2@ = 0x4E // [N]
                                end
                                if 12@ == 7
                                then 2@ = 0x4D // [M]
                                end
                                if 12@ == 8
                                then 2@ = 0x5F // [_]
                                end

                                if 24@ == 0
                                then 23@ = -1
                                end
                                23@ += 1
                                1@ = 23@
                                String_setCharAt() // 1@ - return charAt

                                while not 14@ == -1
                                    get_mutex_var 14@ = IMPORT_TOUCH_X2 // INT: lelf/right
                                    Wait0()
                                end
                            end
                        end

                        10@ += 21
                        11@ += 21
                        12@ += 1
                    end
                end
               //end
            end
        end
    // END: WRITE VALUE

    // BEGIN: CLEAR VALUE
        if 23@ >= 0
        then
            if $ModoDeCompilacion == f_PC
            then
                if Key.IsPressed(0x08)
                then
                    1@ = 23@
                    2@ = 0x00
                    String_setCharAt() // 1@ - return charAt
                    while Key.IsPressed(0x08)
                        wait0()
                    end
                    23@ -= 1
                end
            else
                int 14@, 15@
                // para saber en que tecla estamos
                get_mutex_var 14@ = IMPORT_TOUCH_X2 // INT: lelf/right
                // para saber en que fila estamos
                get_mutex_var 15@ = IMPORT_TOUCH_Y2 // INT: top/down

                if and
                    14@ > 400
                    14@ <= 440

                    15@ >= 320
                    15@ <= 357
                then
                    1@ = 23@
                    2@ = 0x00
                    String_setCharAt() // 1@ - return charAt

                    while not 14@ == -1
                        Wait0()
                        get_mutex_var 14@ = IMPORT_TOUCH_X2 // INT: lelf/right
                    end
                    23@ -= 1
                end
                // f_Android
            end
        end
    // BEGIN: CLEAR VALUE

    // BEGIN: SPAW ANCTOR
        if $ModoDeCompilacion == f_PC
        then
            if Key.IsPressed(0x0D) // Enter
            then valueString()
            end
        else
            int 14@, 15@
            // para saber en que tecla estamos
            get_mutex_var 14@ = IMPORT_TOUCH_X2 // INT: lelf/right
            // para saber en que fila estamos
            get_mutex_var 15@ = IMPORT_TOUCH_Y2 // INT: top/down

            if and
                14@ > 380
                14@ <= 420

                15@ >= 394
                15@ <= 431
            then
                valueString()

                while not 14@ == -1
                    Wait0()
                    get_mutex_var 14@ = IMPORT_TOUCH_X2 // INT: lelf/right
                end
                23@ -= 1
            end
        end
    // END: SPAW ANCTOR

    // BEGIN: CANCEL
        if $ModoDeCompilacion == f_PC
        then
            if Key.IsPressed(0x20)
            then 18@ = -1
            end
        else
            if Menu_Leave()
            then 18@ = -1
            end
        end
    // END: CANCEL

    // show keyboard
    Text.SetWrapX(480.0)
    Text.SetCenter(true)
    if $ModoDeCompilacion == f_PC
    then
        Text.SetScale(1.0, 2.0)
        Text.Display(325.0, 350.0, 'M0000WY')
    else // f_Android
        Text.SetScale(2.0, 4.0)
        Text.Display(325.0, 300.0, 'M0000WY')
    end
return