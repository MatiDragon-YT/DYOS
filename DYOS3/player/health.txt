:MenuJugadorVida
Menu.SetColumn(hPanel, 0, 'M0000AJ','M0000SH','M0000SI','M0000SJ','M0000SQ','M0000SS','M0000SR','M0000SB','M0000S4',none,none,none,none)
//Menu.SetColumn(hPanel, 0, 'M0000AJ','M0000SH','M0000SI','M0000SJ','M0000SQ','M0000SS','M0000SR','M0000SB','M0000S4','M0000FV',none,none,none)

float 0@ = Stat.GetFloat(Stat.MaxHealth)
float 1@ = 100.0
1@ *= 0@
if CURRENT_PLATFORM == __PLATFORM_WINDOWS
then 1@ /= 569.0
else 1@ /= 455.7
end
Math.FloatToInt_LsL(1@, 1@)
Menu.SetItemWithNumber(hPanel, 1, 0, 'M0000TX', 1@) // Maxima

0@ = Actor.GetHealth(hPlayer)
Menu.SetItemWithNumber(hPanel, 1, 1, 'M0000TX', 0@) // Actual

0@ = Actor.GetArmour(hPlayer)
Menu.SetItemWithNumber(hPanel, 1, 2, 'M0000TX', 0@) // Extra

0@ = Stat.GetFloat(Stat.Fat)
0@ /= 10.0
Math.FloatToInt_LsL(0@, 0@)
Menu.SetItemWithNumber(hPanel, 1, 3, 'M0000TX', 0@) // Gordura

0@ = Stat.GetFloat(Stat.Stamina)
0@ /= 10.0
Math.FloatToInt_LsL(0@, 0@)
Menu.SetItemWithNumber(hPanel, 1, 4, 'M0000TX', 0@) // Resistencia

0@ = Stat.GetFloat(Stat.Muscle)
0@ /= 10.0
Math.FloatToInt_LsL(0@, 0@)
Menu.SetItemWithNumber(hPanel, 1, 5, 'M0000TX', 0@) // Musculatura

0@ = 6 // Sangrar
if bit_is_true PLAYER_FLAGS PLAYER_PROP_BLEEDING // bit 1 == false
then setMenuTrue()
else setMenuFalse()
end

Menu_Take_Selection()
Menu_Take_Return()
repeat
  if Menu_Close_Forced()
  then jump @Menu_Close
  end
  MovimientoHorizontalDelMenu()
  THROTTLE_INTERVAL = 200

	switch _SELECTED
			case 0 // Max Health

						float 0@ = Stat.GetFloat(Stat.MaxHealth)
						if VK_Right()
						then 
							0@ += 5.0
							if CURRENT_PLATFORM == __PLATFORM_WINDOWS
							then
								if 0@ > 1451.0
								then 0@ = 1451.0
								end
							else
								if 0@ > 1163.0
								then 0@ = 1163.0
								end
							end
						end
						if VK_Left()
						then
							0@ -= 5.0
							if 0@ < 7.0
							then 0@ = 7.0
							end
						end
						if ParaEspecial()
						then
							if throttle()
							then
								if CURRENT_PLATFORM == __PLATFORM_WINDOWS
								then
									if 0@ <> 569.0
									then 0@ = 569.0
									else 0@ = 1451.0
									end
								else
									if 0@ <> 456.1
									then 0@ = 456.1
									else 0@ = 1163.0
									end
								end
							end
						end
						// Como la vida del jugador 1451(PC) puntos equivalen a 255PV, se aplica una regla de
						// 3 Simples para tener los valores correspondiente de cada numero, siendo el 100.0
						//  el valor por defecto, se aplica esta formula:
						// 
						// newPH = 100.0 * 1451.0 / 255.0
						// newPH = 569.0

						Stat.SetFloat(Stat.MaxHealth,0@)
						float 1@ = 100.0
						1@ *= 0@
						if CURRENT_PLATFORM == __PLATFORM_WINDOWS
						then 1@ /= 569.0
						else 1@ /= 456.1
						end
						Math.FloatToInt_LsL(1@, 1@)
						Menu.SetItemWithNumber(hPanel, 1, 0, 'M0000TX', 1@)// Maxima

						0@ = Actor.GetHealth(hPlayer)
						if 0@ > 1@
						then
							0@ = 1@
							Menu.SetItemWithNumber(hPanel, 1, 1, 'M0000TX', 0@)// Actual
							Actor.SetHealth(hPlayer) = 0@
						end

			case 1 // Current Health

						if Menu_Enter()
						then
							setMenuClear()
							Menu.SetActiveItem(hPanel, 0)
							Menu.SetColumn(hPanel,0,'M0000AJ',none,none,none,none,none,none,none,none,none,none,none,none)

							Menu.SetItemWithNumber(hPanel,0,0,'M0000DN',255)
							Menu.SetItemWithNumber(hPanel,0,1,'M0000DN',100)
							Menu.SetItemWithNumber(hPanel,0,2,'M0000DN',50)
							Menu.SetItemWithNumber(hPanel,0,3,'M0000DN',1)
							
							Menu_Take_Selection()
							repeat
								if Menu_Enter()
								then 
									Text.ClearHelp()
									if _SELECTED == 0
									then Actor.SetHealth(hPlayer) =255
									end
									if _SELECTED == 1
									then Actor.SetHealth(hPlayer) =100
									end
									if _SELECTED == 2
									then Actor.SetHealth(hPlayer) =50
									end
									if _SELECTED == 3
									then Actor.SetHealth(hPlayer) =1
									end
									Aplicated()
									break
								end
							until Menu_Return()
							Menu.SetActiveItem(hPanel, 1)
							jump @MenuJugadorVida
						end

						0@ = Actor.GetHealth(hPlayer)
						if VK_Right()
						then 
							0@ += 1
							if 0@ > 255
							then 0@ = 255
							end
						end
						if VK_Left()
						then
							0@ -= 1
							if 0@ < 1
							then 0@ = 1
							end
						end
						if ParaEspecial()
						then

							if throttle()
							then
								0@ = Stat.GetFloat(Stat.MaxHealth)

								float 1@ = 100.0
								1@ *= 0@
								if CURRENT_PLATFORM == __PLATFORM_WINDOWS
								then 1@ /= 569.0
								else 1@ /= 456.1
								end
								Math.FloatToInt_LsL(0@, 1@)
								2@ = Actor.GetHealth(hPlayer)
								if 003B: 0@ == 2@
								then 0@ = 1
								end
							end
						end
						Actor.SetHealth(hPlayer) = 0@
						Menu.SetItemWithNumber(hPanel, 1, 1, 'M0000TX', 0@)// Actual


			case 2 // Armour

						0@ = Actor.GetArmour(hPlayer)

						if VK_Right()
						then 
							0@ += 1
							if 0@ > 100
							then 0@ = 100
							end
						end
						if VK_Left()
						then
							0@ -= 1
							if 0@ < 0
							then 0@ = 0
							end
						end
						if ParaEspecial()
						then
							if throttle()
							then
								if 0@ == 0
								then 0@ = 100
								else 0@ = 0
								end
							end
						end

						Actor.SetAddArmour(hPlayer) =-100
						Actor.SetAddArmour(hPlayer) = 0@

						Menu.SetItemWithNumber(hPanel, 1, 2, 'M0000TX', 0@)// Extra

			case 3, 4, 5
			
					  // Fat, Stamina, Muscle

						// STAT     ID    OPTION
						// fat      21      3
						// stamina  22      4
						// muscle   23      5

						// id initial - id option = (18, 19, 20)

						2@ = 18 + _SELECTED
						0@ = Stat.GetFloat(2@)

						if VK_Right()
						then 
							0@ += 20.0
						end

						if VK_Left()
						then
							0@ -= 20.0
						end

						if 0@ > 1000.0
						then 0@ = 1000.0
						end
						if 0@ < 0.0
						then 0@ = 0.0
						end

						if ParaEspecial()
						then
							if throttle()
							then
								if 0@ == 0.0
								then 0@ = 1000.0
								else 0@ = 0.0
								end
								Player.Build(hChar)
							end
						end

						if throttle()
						then Player.Build(hChar)
						end


						Math.FloatToInt_LsL(1@, 0@)  // nice
						1@ /= 10
						Menu.SetItemWithNumber(hPanel, 1, _SELECTED, 'M0000TX', 1@) // Gordura

						2@ = 18 + _SELECTED
						Stat.SetFloat(2@, 0@)

			case 6 // Sangrar

						if Menu_Enter()
						then
							THROTTLE_INTERVAL = 120
							if throttle()
							then
								int 0@ = _SELECTED
								if bit_is_false PLAYER_FLAGS PLAYER_PROP_BLEEDING // bit 1 == false
								then
									Enable()
									setMenuTrue()
									bit_set_true PLAYER_FLAGS PLAYER_PROP_BLEEDING // bit 1 = true
									Actor.SetBleeding(hPlayer) = true
								else
									Disable()
									setMenuFalse()
									bit_set_false PLAYER_FLAGS PLAYER_PROP_BLEEDING // bit 1 = false
									Actor.SetBleeding(hPlayer) = false
								end
							end
						end

			case 7 // Inmunidad

						if Menu_Enter()
						then
							setMenuClear()
							Menu.SetActiveItem(hPanel, 0)
							Menu.SetColumn(hPanel,0,'M0000S4','M0000S5','M0000S6','M0000S7','M0000S8','M0000S9',none,none,none,none,none,none,none)

							0@ = 0
							2@ = PLAYER_PROP_IMMUNITION_BULLETS
							while 2@ <= PLAYER_PROP_IMMUNITION_MELEE
								if bit_is_true PLAYER_FLAGS 2@ // bit 1 == false
								then setMenuTrue()
								else setMenuFalse()
								end
								0@++
								2@++
							end
							
							Menu_Take_Selection()
							repeat
						    if Menu_Close_Forced()
						    then jump @Menu_Close
						    end
								if Menu_Enter()
								then

									if bit_is_true PLAYER_FLAGS PLAYER_PROP_IMMUNITION_BULLETS // bit 1 == false
									then 6@ = true
									else 6@ = false
									end
									if bit_is_true PLAYER_FLAGS PLAYER_PROP_IMMUNITION_FIRE // bit 1 == false
									then 7@ = true
									else 7@ = false
									end
									if bit_is_true PLAYER_FLAGS PLAYER_PROP_IMMUNITION_EXPLOSION // bit 1 == false
									then 8@ = true
									else 8@ = false
									end
									if bit_is_true PLAYER_FLAGS PLAYER_PROP_IMMUNITION_COLLISION // bit 1 == false
									then 9@ = true
									else 9@ = false
									end
									if bit_is_true PLAYER_FLAGS PLAYER_PROP_IMMUNITION_MELEE // bit 1 == false
									then 10@ = true
									else 10@ = false
									end

									if _SELECTED == 0
									then
										if bit_is_false PLAYER_FLAGS PLAYER_PROP_IMMUNITION_BULLETS
										then
											bit_set_true PLAYER_FLAGS PLAYER_PROP_IMMUNITION_BULLETS // bit 1 = true
											6@ = true
											setMenuTrueA()
										else
											bit_set_false PLAYER_FLAGS PLAYER_PROP_IMMUNITION_BULLETS // bit 1 = false
											6@ = false
											setMenuFalseA()
										end
									end
									if _SELECTED == 1
									then
										if bit_is_false PLAYER_FLAGS PLAYER_PROP_IMMUNITION_FIRE
										then
											bit_set_true PLAYER_FLAGS PLAYER_PROP_IMMUNITION_FIRE // bit 1 = true
											7@ = true
											setMenuTrueA()
										else
											bit_set_false PLAYER_FLAGS PLAYER_PROP_IMMUNITION_FIRE // bit 1 = false
											7@ = false
											setMenuFalseA()
										end
									end
									if _SELECTED == 2
									then
										if bit_is_false PLAYER_FLAGS PLAYER_PROP_IMMUNITION_EXPLOSION
										then
											bit_set_true PLAYER_FLAGS PLAYER_PROP_IMMUNITION_EXPLOSION // bit 1 = true
											8@ = true
											setMenuTrueA()
										else
											bit_set_false PLAYER_FLAGS PLAYER_PROP_IMMUNITION_EXPLOSION // bit 1 = false
											8@ = false
											setMenuFalseA()
										end
									end
									if _SELECTED == 3
									then
										if bit_is_false PLAYER_FLAGS PLAYER_PROP_IMMUNITION_COLLISION
										then
											bit_set_true PLAYER_FLAGS PLAYER_PROP_IMMUNITION_COLLISION // bit 1 = true
											9@ = true
											setMenuTrueA()
										else
											bit_set_false PLAYER_FLAGS PLAYER_PROP_IMMUNITION_COLLISION // bit 1 = false
											9@ = false
											setMenuFalseA()
										end
									end
									if _SELECTED == 4
									then
										if bit_is_false PLAYER_FLAGS PLAYER_PROP_IMMUNITION_MELEE
										then
											bit_set_true PLAYER_FLAGS PLAYER_PROP_IMMUNITION_MELEE // bit 1 = true
											10@ = true
											setMenuTrueA()
										else
											bit_set_false PLAYER_FLAGS PLAYER_PROP_IMMUNITION_MELEE // bit 1 = false
											10@ = false
											setMenuFalseA()
										end
									end
									
									Actor.SetImmunities(hPlayer,6@,7@,8@,9@,10@)
									Player.SetFireProof(hChar, 7@)
									Menu_Take_Selection()
								end
							until Menu_Return()
							setMenuClear()
							Menu.SetActiveItem(hPanel, 7)
							jump @MenuJugadorVida
						end

			default
		end
until Menu_Return()
setMenuClear()